{"version":3,"sources":["components/Input.js","components/Button.js","components/Switcher.js","components/TodoItem.js","components/Clear.js","App.js","reportWebVitals.js","index.js"],"names":["Input","_ref","name","description","value","setValue","React","createElement","className","onChange","event","target","type","placeholder","Button","onClick","Switcher","isCompletedScreen","setIsCompletedScreen","concat","TodoItem","todoTitle","todoDescription","handleDeleteTodo","handleDeleteCompletedTodo","id","handleCommit","index","AiOutlineDelete","handleDelete","title","IoMdRefresh","BsCheckLg","Clear","handleClear","App","newTodoTitle","setNewTodoTitle","useState","newDescription","setNewDescription","allTodos","setAllTodos","completedTodos","setCompletedTodos","useEffect","async","fetch","then","res","json","console","log","fetchTodos","date","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","hh","getHours","minutes","getMinutes","ss","getSeconds","finalDate","filteredTodo","find","item","completed_at","updatedList","handleToDo","todo","filter","handleAddNewTodo","newTodoObj","getMilliseconds","updatedTodoArr","push","map","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7a74e9b2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Input = ({ name, description, value, setValue }) => {\n  return (\n    <div className=\"todo-input-item\">\n      <label>{name}:</label>\n      <input\n        value={value}\n        onChange={(event) => {\n          setValue(event.target.value);\n        }}\n        type=\"text\"\n        placeholder={description}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Button = ({ onClick }) => { // Заменено onCLick на onClick\n  return (\n    <div className=\"todo-input-item\">\n      <button onClick={onClick} className=\"primary-btn\" type=\"button\">\n        Add\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\n\nconst Switcher = ({ isCompletedScreen, setIsCompletedScreen }) => {\n  return (\n    <div className=\"btn-area\">\n      <button\n        onClick={() => setIsCompletedScreen(false)}\n        className={`secondaryBtn ${isCompletedScreen === false && \"active\"}`}>\n        To Do\n      </button>\n      <button\n        onClick={() => setIsCompletedScreen(true)}\n        className={`secondaryBtn ${isCompletedScreen === true && \"active\"}`}>\n        Completed\n      </button>\n    </div>\n  );\n};\n\nexport default Switcher;\n","// import React from \"react\";\n// import { AiOutlineDelete } from \"react-icons/ai\";\n// import { BsCheckLg } from \"react-icons/bs\";\n// import { IoMdRefresh } from \"react-icons/io\";\n\n// const TodoItem = ({\n//   todoTitle,\n//   todoDescription,\n//   handleDeleteTodo,\n//   id,\n//   handleCommit,\n//   index,\n//   isCompletedScreen,\n// }) => {\n//   return (\n//     <div className=\"todo-list-item\">\n//       <div>\n//         <h3>{todoTitle}</h3>\n//         <p>{todoDescription}</p>\n//       </div>\n//       <div>\n//         <AiOutlineDelete onClick={() => handleDeleteTodo(id)} title=\"Delete?\" className=\"icon\" />\n\n//         {isCompletedScreen ? (\n//           <IoMdRefresh className=\"icon\" onClick={() => handleCommit(id)} />\n//         ) : (\n//           <BsCheckLg\n//             onClick={() => handleCommit(id)}\n//             title=\"Completed?\"\n//             className=\" check-icon\"\n//           />\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TodoItem;\nimport React from \"react\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { BsCheckLg } from \"react-icons/bs\";\nimport { IoMdRefresh } from \"react-icons/io\";\n\nconst TodoItem = ({\n  todoTitle,\n  todoDescription,\n  handleDeleteTodo, // Функция для удаления из allTodos\n  handleDeleteCompletedTodo, // Функция для удаления из completedTodos\n  id,\n  handleCommit,\n  index,\n  isCompletedScreen,\n}) => {\n  const handleDelete = () => {\n    if (isCompletedScreen) {\n      handleDeleteCompletedTodo(id);\n    } else {\n      handleDeleteTodo(id);\n    }\n  };\n\n  return (\n    <div className=\"todo-list-item\">\n      <div>\n        <h3>{todoTitle}</h3>\n        <p>{todoDescription}</p>\n      </div>\n      <div>\n        <AiOutlineDelete onClick={handleDelete} title=\"Delete?\" className=\"icon\" />\n\n        {isCompletedScreen ? (\n          <IoMdRefresh className=\"icon\" onClick={() => handleCommit(id)} />\n        ) : (\n          <BsCheckLg\n            onClick={() => handleCommit(id)}\n            title=\"Completed?\"\n            className=\" check-icon\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TodoItem;\n","import React from \"react\";\n\nconst Clear = ({ handleClear }) => {\n  return (\n    <button onClick={handleClear} className=\"clear\">\n      Clear\n    </button>\n  );\n};\n\nexport default Clear;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport Input from \"./components/Input\";\nimport Button from \"./components/Button\";\nimport Switcher from \"./components/Switcher\";\nimport TodoItem from \"./components/TodoItem\";\nimport Clear from \"./components/Clear\";\n\nfunction App() {\n  const [newTodoTitle, setNewTodoTitle] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [allTodos, setAllTodos] = useState([]);\n  const [completedTodos, setCompletedTodos] = useState([]);\n  const [isCompletedScreen, setIsCompletedScreen] = useState(false);\n\n    useEffect(() => {\n    const fetchTodos = async () => {\n      await fetch(\"https://jsonplaceholder.typicode.com/todos\")\n        .then((res) => res.json())\n        .then((res) => console.log(res));\n    };\n    fetchTodos();\n  }, []);\n\n  const handleAddNewTodo = () => {\n    if (newDescription && newTodoTitle) {\n      const date = new Date();\n      let newTodoObj = {\n        id: date.getMilliseconds(),\n        title: newTodoTitle,\n        description: newDescription,\n      };\n\n      let updatedTodoArr = [...allTodos];\n      updatedTodoArr.push(newTodoObj);\n\n      setAllTodos(updatedTodoArr);\n\n      setNewTodoTitle(\"\");\n      setNewDescription(\"\");\n    }\n  };\n\n  const handleCommit = (index) => {\n    const date = new Date();\n    let dd = date.getDate();\n    let mm = date.getMonth();\n    let yyyy = date.getFullYear();\n    let hh = date.getHours();\n    let minutes = date.getMinutes();\n    let ss = date.getSeconds();\n    let finalDate = `${dd}-${mm}-${yyyy} at ${hh}:${minutes}:${ss}`;\n\n    let filteredTodo = {\n      ...allTodos.find((item) => item.id === index),\n      completed_at: finalDate,\n    };\n\n    let updatedList = [...completedTodos, filteredTodo];\n    console.log(updatedList);\n    setCompletedTodos(updatedList);\n\n    handleDeleteTodo(index);\n  };\n\n  const handleToDo = (index) => {\n    let todo = {\n      ...completedTodos.find((item) => item.id === index),\n    };\n\n    setAllTodos([...allTodos, todo]);\n    setCompletedTodos(completedTodos.filter((item) => item.id !== index));\n  };\n\n  const handleDeleteTodo = (id) => {\n    setAllTodos(allTodos.filter((item, index) => item.id !== id));\n  };\n\n  const handleClear = () => {\n    setAllTodos([]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>My Todos</h1>\n      <div className=\"todo-wrapper\">\n        <div className=\"todo-input\">\n          <Input\n            value={newTodoTitle}\n            setValue={setNewTodoTitle}\n            name={\"Title\"}\n            description={\"What's the title of your To Do?\"}\n          />\n          <Input\n            value={newDescription}\n            setValue={setNewDescription}\n            name={\"Description\"}\n            description={\"What's the description of your To Do?\"}\n          />\n          <Button onClick={handleAddNewTodo} />\n        </div>\n        <div className=\"clear-wrapper\">\n          <Clear handleClear={handleClear} />\n          <Switcher\n            isCompletedScreen={isCompletedScreen}\n            setIsCompletedScreen={setIsCompletedScreen}\n          />\n        </div>\n        <div className=\"todo-list\">\n          {isCompletedScreen === true\n            ? completedTodos?.map((item, index) => (\n                <TodoItem\n                  handleCommit={handleToDo}\n                  key={index}\n                  index={index}\n                  handleDeleteTodo={handleDeleteTodo}\n                  id={item.id}\n                  isCompletedScreen={isCompletedScreen}\n                  todoTitle={item.title}\n                  todoDescription={item.description}\n                />\n              ))\n            : allTodos.map((item, index) => (\n                <TodoItem\n                  handleCommit={handleCommit}\n                  key={index}\n                  index={index}\n                  handleDeleteTodo={handleDeleteTodo}\n                  isCompletedScreen={isCompletedScreen}\n                  id={item.id}\n                  todoTitle={item.title}\n                  todoDescription={item.description}\n                />\n              ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}